// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sin@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-half-pi@esm/index.mjs";var f=p.isPrimitive,c=u;var b=function(e,t){return!f(e)||c(e)?new TypeError("invalid argument. First argument must be a number primitive and not `NaN`. Value: `"+e+"`."):!f(t)||c(t)?new TypeError("invalid argument. Second argument must be a number primitive and not `NaN`. Value: `"+t+"`."):e>=t?new RangeError("invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `["+e+","+t+"]`."):null},v=h,x=j,y=g;var w=function(e,t,n){return t+v(x(y*e()),2)*(n-t)},N=e,E=t,L=n,O=s,T=r,V=i,P=o,R=m,G=a.factory,M=d,S=l,A=b,J=w;var z=function(){var e,t,n,s,r,i;if(0===arguments.length)t=G();else if(1===arguments.length){if(!O(e=arguments[0]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.");if(V(e,"prng")){if(!T(e.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+e.prng+"`.");t=e.prng}else t=G(e)}else{if(s=A(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!O(e=arguments[2]))throw new TypeError("invalid argument. Options argument must be an object. Value: `"+e+"`.");if(V(e,"prng")){if(!T(e.prng))throw new TypeError("invalid option. `prng` option must be a pseudorandom number generator function. Option: `"+e.prng+"`.");t=e.prng}else t=G(e)}else t=G()}return N(n=void 0===r?j:h,"NAME","arcsine"),e&&e.prng?(N(n,"seed",null),N(n,"seedLength",null),L(n,"state",P(null),R),N(n,"stateLength",null),N(n,"byteLength",null),N(n,"toJSON",P(null)),N(n,"PRNG",t)):(E(n,"seed",o),E(n,"seedLength",m),L(n,"state",l,p),E(n,"stateLength",a),E(n,"byteLength",d),N(n,"toJSON",u),N(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function a(){return t.stateLength}function d(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=S(t.state),e.params=void 0===r?[]:[r,i],e}function h(){return J(t,r,i)}function j(e,n){return M(e)||M(n)||e>=n?NaN:J(t,e,n)}},F=z(),k=z;e(F,"factory",k);var q=F;export{q as default,k as factory};
//# sourceMappingURL=index.mjs.map
