// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-sin@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-half-pi@esm/index.mjs";var c=u.isPrimitive,b=h;var v=function(t,e){return!c(t)||b(t)?new TypeError("invalid argument. First argument must be a number primitive and not `NaN`. Value: `"+t+"`."):!c(e)||b(e)?new TypeError("invalid argument. Second argument must be a number primitive and not `NaN`. Value: `"+e+"`."):t>=e?new RangeError("invalid argument. Minimum support `a` must be less than maximum support `b`. Value: `["+t+","+e+"]`."):null},x=j,y=g,w=f;var N=function(t,e,n){return e+x(y(w*t()),2)*(n-e)},E=t,L=e,O=n,T=s,V=r,P=i,R=o,G=m,M=a.factory,S=d,A=l,J=p,z=v,F=N;var k=function(){var t,e,n,s,r,i;if(0===arguments.length)e=M();else if(1===arguments.length){if(!T(t=arguments[0]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",t));if(P(t,"prng")){if(!V(t.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=t.prng}else e=M(t)}else{if(s=z(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!T(t=arguments[2]))throw new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",t));if(P(t,"prng")){if(!V(t.prng))throw new TypeError(J("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=t.prng}else e=M(t)}else e=M()}return E(n=void 0===r?j:h,"NAME","arcsine"),t&&t.prng?(E(n,"seed",null),E(n,"seedLength",null),O(n,"state",R(null),G),E(n,"stateLength",null),E(n,"byteLength",null),E(n,"toJSON",R(null)),E(n,"PRNG",e)):(L(n,"seed",o),L(n,"seedLength",m),O(n,"state",l,p),L(n,"stateLength",a),L(n,"byteLength",d),E(n,"toJSON",u),E(n,"PRNG",e),e=e.normalized),n;function o(){return e.seed}function m(){return e.seedLength}function a(){return e.stateLength}function d(){return e.byteLength}function l(){return e.state}function p(t){e.state=t}function u(){var t={type:"PRNG"};return t.name=n.NAME,t.state=A(e.state),t.params=void 0===r?[]:[r,i],t}function h(){return F(e,r,i)}function j(t,n){return S(t)||S(n)||t>=n?NaN:F(e,t,n)}},q=k(),B=k;t(q,"factory",B);var C=q;export{C as default,B as factory};
//# sourceMappingURL=index.mjs.map
